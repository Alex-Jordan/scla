<?xml version="1.0" encoding="UTF-8" ?>
<section acro="JCF">
<title>Jordan Canonical Form</title>

<introduction></introduction>
<subsection>
<!-- %%%%%%%%%% -->
<!-- % -->
<!-- %  Section JCF -->
<!-- %  Jordan Canonical Form -->
<!-- % -->
<!-- %%%%%%%%%% -->
{\sc\large This section is in draft form}\\
{\sc\large Needs examples near beginning}
<p><p>\medskip
We have seen in <acroref type="section" acro="IS" /> that generalized eigenspaces are invariant subspaces that in every instance have led to a direct sum decomposition of the domain of the associated linear transformation.  This allows us to create a block diagonal matrix representation (<acroref type="example" acro="ISMR4" />, <acroref type="example" acro="ISMR6" />).     We also know from <acroref type="theorem" acro="RGEN" /> that the restriction of a linear transformation to a generalized eigenspace is almost a nilpotent linear transformation.  Of course, we understand nilpotent linear transformations very well from <acroref type="section" acro="NLT" /> and we have carefully determined a nice matrix representation for them.<p><p>
So here is the game plan for the final push.  Prove that the domain of a linear transformation always decomposes into a direct sum of generalized eigenspaces.  We have unravelled <acroref type="theorem" acro="RGEN" /> at <acroref type="theorem" acro="MRRGE" /> so that we can formulate the matrix representations of the restrictions on the generalized eigenspaces using our storehouse of results about nilpotent linear transformations.  Arrive at a matrix representation of <em>any</em> linear transformation that is block diagonal with each block being a Jordan block.<p><p>













\subsect{GESD}{Generalized Eigenspace Decomposition}
In <acroref type="theorem" acro="UTMR" /> we were able to show that any linear transformation from <m>V</m> to <m>V</m> has an upper triangular matrix representation (<acroref type="definition" acro="UTM" />).  We will now show that we can improve on the basis yielding this representation by massaging the basis so that the matrix representation is also block diagonal.  The subspaces associated with each block will be generalized eigenspaces, so the most general result will be a decomposition of the domain of a linear transformation into a direct sum of generalized eigenspaces.
<theorem acro="GESD" index="generalized eigenspace decomposition">
<title>Generalized Eigenspace Decomposition</title>

<todo>Copy over proof, with edits</todo>

<proof>
Suppose that <m>\dimension{V}=n</m> and the <m>n</m> (not necessarily distinct) eigenvalues of <m>T</m> are <m>\scalarlist{\rho}{n}</m>.   We begin with a basis of <m>V</m> that yields an upper triangular matrix representation, as guaranteed by <acroref type="theorem" acro="UTMR" />, <m>B=\set{\vectorlist{x}{n}}</m>. Since the matrix representation is upper triangular, and the eigenvalues of the linear transformation are the diagonal elements we can choose this basis so that there are then scalars <m>a_{ij}</m>, <m>1\leq j\leq n</m>, <m>1\leq i\leq j-1</m> such that
<me><md>
<mrow>
<![CDATA[\lt{T}{\vect{x}_j}&=\sum_{i=1}^{j-1}\,a_{ij}\vect{x}_i + \rho_j\vect{x}_j]]>
</mrow>
</md></me>
<![CDATA[We now define a new basis for <m>V</m> which is just a slight variation in the basis <m>B</m>.  Choose any <m>k</m> and <m>\ell</m> such that <m>1\leq k<\ell\leq n</m> and <m>\rho_k\neq\rho_\ell</m>.  Define the scalar <m>\alpha=a_{kl}/\left(\rho_\ell-\rho_k\right)</m>.  The new basis is <m>C=\set{\vectorlist{y}{n}}</m> where]]>
<me><md>
<mrow>
<![CDATA[\vect{y}_j&=\vect{x}_j,\quad j\neq\ell,\ 1\leq j\leq n]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{y}_\ell&=\vect{x}_\ell+\alpha\vect{x}_k]]>
</mrow>
</md></me>
<![CDATA[We now compute the values of the linear transformation <m>T</m> with inputs from <m>C</m>, noting carefully the changed scalars in the linear combinations of <m>C</m> describing the outputs.  These changes will translate to minor changes in the matrix representation built using the basis <m>C</m>.  There are three cases to consider, depending on which column of the matrix representation we are examining.  First, assume <m>j<\ell</m>.  Then]]>
<me><md>
<mrow>
\lt{T}{\vect{y}_j}
</mrow>
<mrow>&amp;=\lt{T}{\vect{x}_j}\\]]>
</mrow>
<mrow>&amp;=\sum_{i=1}^{j-1}\,a_{ij}\vect{x}_i + \rho_j\vect{x}_j\\]]>
</mrow>
<mrow>&amp;=\sum_{i=1}^{j-1}\,a_{ij}\vect{y}_i + \rho_j\vect{y}_j]]>
</mrow>
</md></me>
That seems a bit pointless.  The first <m>\ell-1</m> columns of the matrix representations of <m>T</m> relative to <m>B</m> and <m>C</m> are identical.  OK, if that was too easy, here's the main act.  Assume <m>j=\ell</m>.
Then
<me><md>
<mrow>
\lt{T}{\vect{y}_\ell}
</mrow>
<mrow>&amp;=\lt{T}{\vect{x}_\ell+\alpha\vect{x}_k}\\]]>
</mrow>
<mrow>&amp;=\lt{T}{\vect{x}_\ell}+\alpha\lt{T}{\vect{x}_k}\\]]>
</mrow>
<mrow>&amp;=\left(\sum_{i=1}^{\ell-1}\,a_{i\ell}\vect{x}_i + \rho_\ell\vect{x}_\ell\right)+]]>
\alpha\left(\sum_{i=1}^{k-1}\,a_{ik}\vect{x}_i + \rho_k\vect{x}_k\right)\\
</mrow>
<mrow>&amp;=\sum_{i=1}^{\ell-1}\,a_{i\ell}\vect{x}_i + \rho_\ell\vect{x}_\ell+]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i + \alpha\rho_k\vect{x}_k\\
</mrow>
<mrow>&amp;=\sum_{i=1}^{\ell-1}\,a_{i\ell}\vect{x}_i + \sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i +]]>
 \alpha\rho_k\vect{x}_k + \rho_\ell\vect{x}_\ell\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq k}}^{\ell-1}\,a_{i\ell}\vect{x}_i +]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i +
a_{kl}\vect{x}_k + \alpha\rho_k\vect{x}_k + \rho_\ell\vect{x}_\ell\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq k}}^{\ell-1}\,a_{i\ell}\vect{x}_i +]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i +
a_{kl}\vect{x}_k + \alpha\rho_k\vect{x}_k - \rho_\ell\alpha\vect{x}_k +  \rho_\ell\alpha\vect{x}_k + \rho_\ell\vect{x}_\ell\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq k}}^{\ell-1}\,a_{i\ell}\vect{x}_i +]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i +
\left(a_{kl}+\alpha\rho_k-\rho_\ell\alpha\right)\vect{x}_k +\rho_\ell\left(\alpha\vect{x}_k+\vect{x}_\ell\right)\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq k}}^{\ell-1}\,a_{i\ell}\vect{x}_i +]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{x}_i +
\left(a_{kl}+\alpha\left(\rho_k-\rho_\ell\right)\right)\vect{x}_k +\rho_\ell\left(\vect{x}_\ell+\alpha\vect{x}_k\right)\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq k}}^{\ell-1}\,a_{i\ell}\vect{y}_i +]]>
\sum_{i=1}^{k-1}\,\alpha a_{ik}\vect{y}_i +
\left(a_{kl}+\alpha\left(\rho_k-\rho_\ell\right)\right)\vect{y}_k +\rho_\ell\vect{y}_\ell
</mrow>
</md></me>
So how different are the matrix representations relative to <m>B</m> and <m>C</m> in column <m>\ell</m>?  For <m>i>k</m>, the coefficient of <m>\vect{y}_i</m> is <m>a_{ij}</m>, as in the representation relative to <m>B</m>.  It is a different story for <m>i\leq k</m>, where the coefficients of <m>\vect{y}_i</m> may be very different.  We are especially interested in the coefficient of <m>\vect{y}_k</m>.  In fact, this whole first part of this proof is about this particular entry of the matrix representation.  The coefficient of  <m>\vect{y}_k</m> is
<me><md>
<mrow>
a_{kl}+\alpha\left(\rho_k-\rho_\ell\right)
</mrow>
<mrow>&amp;=a_{kl}+\frac{a_{kl}}{\rho_\ell-\rho_k}\left(\rho_k-\rho_\ell\right)\\]]>
</mrow>
<mrow>&amp;=a_{kl}+(-1)a_{kl}\\]]>
</mrow>
<mrow>&amp;=0]]>
</mrow>
</md></me>
If the definition of <m>\alpha</m> was a mystery, then no more.  In the matrix representation of <m>T</m> relative to <m>C</m>, the entry in column <m>\ell</m>, row <m>k</m> is a zero.  Nice.  The only price we pay is that other entries in column <m>\ell</m>, specifically rows <m>1</m> through <m>k-1</m>, may also change in a way we can't control.<p><p>
One more case to consider.  Assume <m>j>\ell</m>.  Then
<me><md>
<mrow>
\lt{T}{\vect{y}_j}
</mrow>
<mrow>&amp;=\lt{T}{\vect{x}_j}\\]]>
</mrow>
<mrow>&amp;=\sum_{i=1}^{j-1}\,a_{ij}\vect{x}_i + \rho_j\vect{x}_j\\]]>
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq\ell,k}}^{j-1}\,a_{ij}\vect{x}_i + a_{\ell j}\vect{x}_\ell+ a_{kj}\vect{x}_k + \rho_j\vect{x}_j\\]]>
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq\ell,k}}^{j-1}\,a_{ij}\vect{x}_i+]]>
a_{\ell j}\vect{x}_\ell + \alpha a_{\ell j}\vect{x}_k - \alpha a_{\ell j}\vect{x}_k+ a_{kj}\vect{x}_k  + \rho_j\vect{x}_j\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq\ell,k}}^{j-1}\,a_{ij}\vect{x}_i+]]>
a_{\ell j}\left(\vect{x}_\ell + \alpha\vect{x}_k\right)+
\left(a_{kj}-\alpha a_{\ell j}\right)\vect{x}_k  + \rho_j\vect{x}_j\\
</mrow>
<mrow>&amp;=\sum_{\substack{i=1\\i\neq\ell,k}}^{j-1}\,a_{ij}\vect{y}_i+]]>
a_{\ell j}\vect{y}_\ell+
\left(a_{kj}-\alpha a_{\ell j}\right)\vect{y}_k  + \rho_j\vect{y}_j
</mrow>
</md></me>
As before, we ask: how different are the matrix representations relative to <m>B</m> and <m>C</m> in column <m>j</m>?  Only <m>\vect{y}_k</m> has a coefficient different from the corresponding coefficient when the basis is <m>B</m>.  So in the matrix representations, the only entries to change are in row <m>k</m>, for columns <m>\ell+1</m> through <m>n</m>.<p><p>
What have we accomplished?  With a change of basis, we can place a zero in a desired entry (row <m>k</m>, column <m>\ell</m>) of the matrix representation, leaving most of the entries untouched.  The only entries to possibly change are above the new zero entry, or to the right of the new zero entry.  Suppose we repeat this procedure, starting by <q>zeroing out</q> the entry above the diagonal in the second column and first row.  Then we move right to the third column, and zero out the element just above the diagonal in the second row.  Next we zero out the element in the third column and first row.  Then tackle the fourth column, work upwards from the diagonal, zeroing out elements as we go.
Entries above, and to the right will repeatedly change, but newly created zeros will never get wrecked, since they are below, or just to the left of the entry we are working on.  Similarly the values on the diagonal do not change either.   This entire argument can be retooled in the language of change-of-basis matrices and similarity transformations, and this is the approach taken by Noble in his <i>Applied Linear Algebra</i>.  It is interesting to concoct the change-of-basis matrix between the matrices <m>B</m> and <m>C</m> and compute the inverse.<p><p>
Perhaps you have noticed that we have to be just a bit more careful than the previous paragraph suggests.  The definition of <m>\alpha</m> has a denominator that cannot be zero, which restricts our maneuvers to zeroing out entries in row <m>k</m> and column <m>\ell</m> only when <m>\rho_k\neq\rho_\ell</m>.   So we do not necessarily arrive at a diagonal matrix.  More carefully we can write
<me><md>
<mrow>
<![CDATA[\lt{T}{\vect{y}_j}&=\sum_{\substack{i=1\\i:\,\rho_i=\rho_j}}^{j-1}\,b_{ij}\vect{y}_i + \rho_j\vect{y}_j]]>
</mrow>
</md></me>
where the <m>b_{ij}</m> are our new coefficients after repeated changes, the <m>\vect{y}_j</m> are the new basis vectors, and the condition <q><m>i:\,\rho_i=\rho_j</m></q> means that we only have terms in the sum involving vectors whose final coefficients are identical diagonal values (the eigenvalues).   Now reorder the basis vectors carefully.  Group together vectors that have equal diagonal entries in the matrix representation, but within each group preserve the order of the precursor basis.  This grouping will create a block diagonal structure for the matrix representation, while otherwise preserving the order of the basis will retain the upper triangular form of the representation.
So we can arrive at a basis that yields a matrix representation that is upper triangular and block diagonal, with the diagonal entries of each block all equal to a common eigenvalue of the linear transformation.<p><p>
More carefully, employing the distinct eigenvalues of <m>T</m>, <m>\lambda_i</m>, <m>1\leq i\leq m</m>, we can assert there is a set of basis vectors for <m>V</m>, <m>\vect{u}_{ij}</m>, <m>1\leq i\leq m</m>, <m>1\leq j\leq\algmult{T}{\lambda_i}</m>, such that
<me><md>
<mrow>
<![CDATA[\lt{T}{\vect{u}_{ij}}&=\sum_{k=1}^{j-1}\,b_{ijk}\vect{u}_{ik} + \lambda_i\vect{u}_{ij}]]>
</mrow>
</md></me>
So the subspace <m>U_i=\spn{\setparts{\vect{u}_{ij}}{1 \leq j\leq\algmult{T}{\lambda_i}}}</m>, <m>1\leq i\leq m</m>  is an invariant subspace of <m>V</m> relative to <m>T</m> and the restriction <m>\restrict{T}{U_i}</m> has an upper triangular matrix representation relative to the basis <m>\setparts{\vect{u}_{ij}}{1 \leq j\leq\algmult{T}{\lambda_i}}</m> where the diagonal entries are all equal to <m>\lambda_i</m>.  Notice too that with this definition,
<me><md>
<mrow>
<![CDATA[V&=U_1\ds U_2\ds U_3\ds\cdots\ds U_m]]>
</mrow>
</md></me>
Whew.  This is a good place to take a break, grab a cup of coffee, use the toilet, or go for a short stroll, before we show that <m>U_i</m> is a subspace of the generalized eigenspace <m>\geneigenspace{T}{\lambda_i}</m>.  This will follow if we can prove that each of the basis vectors for <m>U_i</m> is a generalized eigenvector of <m>T</m> for <m>\lambda_i</m> (<acroref type="definition" acro="GEV" />).  We need some power of <m>T-\lambda_i I_V</m> that takes <m>\vect{u}_{ij}</m> to the zero vector.  We prove by induction on <m>j</m> (<acroref type="technique" acro="I" />) the claim that <m>\lt{\left(T-\lambda_i I_V\right)^j}{\vect{u}_{ij}}=\zerovector</m>.  For <m>j=1</m> we have,
<me><md>
<mrow>
\lt{\left(T-\lambda_i I_V\right)}{\vect{u}_{i1}}
</mrow>
<mrow>&amp;=\lt{T}{\vect{u}_{i1}}-\lambda_i \lt{I_V}{\vect{u}_{i1}}\\]]>
</mrow>
<mrow>&amp;=\lt{T}{\vect{u}_{i1}}-\lambda_i\vect{u}_{i1}\\]]>
</mrow>
<mrow>&amp;=\lambda_i\vect{u}_{i1}-\lambda_i\vect{u}_{i1}\\]]>
</mrow>
<mrow>&amp;=\zerovector]]>
</mrow>
</md></me>
<![CDATA[For the induction step, assume that if <m>k<j</m>, then <m>\left(T-\lambda_i I_V\right)^k</m> takes <m>\vect{u}_{ik}</m> to the zero vector.  Then]]>
<me><md>
<mrow>
\lt{\left(T-\lambda_i I_V\right)^j}{\vect{u}_{ij}}
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda_i I_V\right)^{j-1}}{\lt{\left(T-\lambda_i I_V\right)}{\vect{u}_{ij}}}\\
</mrow>
<mrow>&amp;=\lt{\left(T-\lambda_i I_V\right)^{j-1}}{]]>
\lt{T}{\vect{u}_{ij}}-\lambda_i\lt{I_V}{\vect{u}_{ij}}
}\\
</mrow>
<mrow>&amp;=\lt{\left(T-\lambda_i I_V\right)^{j-1}}{]]>
\lt{T}{\vect{u}_{ij}}-\lambda_i\vect{u}_{ij}
}\\
</mrow>
<mrow>&amp;=\lt{\left(T-\lambda_i I_V\right)^{j-1}}{]]>
\sum_{k=1}^{j-1}\,b_{ijk}\vect{u}_{ik} + \lambda_i\vect{u}_{ij}-\lambda_i\vect{u}_{ij}
}\\
</mrow>
<mrow>&amp;=\lt{\left(T-\lambda_i I_V\right)^{j-1}}{]]>
\sum_{k=1}^{j-1}\,b_{ijk}\vect{u}_{ik}
}\\
</mrow>
<mrow>&amp;=\sum_{k=1}^{j-1}\,b_{ijk}\lt{\left(T-\lambda_i I_V\right)^{j-1}}{\vect{u}_{ik}}\\]]>
</mrow>
<mrow>&amp;=\sum_{k=1}^{j-1}\,b_{ijk}]]>
\lt{\left(T-\lambda_i I_V\right)^{j-1-k}}{\lt{\left(T-\lambda_i I_V\right)^{k}}{\vect{u}_{ik}}}\\
</mrow>
<mrow>&amp;=\sum_{k=1}^{j-1}\,b_{ijk}\lt{\left(T-\lambda_i I_V\right)^{j-1-k}}{\zerovector}\\]]>
</mrow>
<mrow>&amp;=\sum_{k=1}^{j-1}\,b_{ijk}\zerovector\\]]>
</mrow>
<mrow>&amp;=\zerovector]]>
</mrow>
</md></me>
This completes the induction step.  Since every vector of the spanning set for <m>U_i</m> is an element of the subspace <m>\geneigenspace{T}{\lambda_i}</m>, <acroref type="property" acro="AC" /> and <acroref type="property" acro="SC" /> allow us to conclude that <m>U_i\subseteq\geneigenspace{T}{\lambda_i}</m>.  Then by <acroref type="definition" acro="S" />, <m>U_i</m> is a subspace of <m>\geneigenspace{T}{\lambda_i}</m>.  Notice that this inductive proof could be interpreted to say that every element of <m>U_i</m> is a generalized eigenvector of <m>T</m> for <m>\lambda_i</m>, and the algebraic multiplicity of <m>\lambda_i</m> is a sufficiently high power to demonstrate this via the definition for each vector.<p><p>
We are now prepared for our final argument in this long proof.  We wish to establish that the dimension of the subspace <m>\geneigenspace{T}{\lambda_i}</m> is the algebraic multiplicity of <m>\lambda_i</m>.  This will be enough to show that <m>U_i</m> and <m>\geneigenspace{T}{\lambda_i}</m> are equal, and will finally provide the desired direct sum decomposition.<p><p>
We will prove by induction (<acroref type="technique" acro="I" />) the following claim.  Suppose that <m>\ltdefn{T}{V}{V}</m> is a linear transformation and <m>B</m> is a basis for <m>V</m> that provides an upper triangular matrix representation of <m>T</m>.  The number of times any eigenvalue <m>\lambda</m> occurs on the diagonal of the representation is greater than or equal to the dimension of the generalized eigenspace  <m>\geneigenspace{T}{\lambda}</m>.<p><p>
We will use the symbol <m>m</m> for the dimension of <m>V</m> so as to avoid confusion with our notation for the nullity.  So <m>\dim{V}=m</m> and our proof will proceed by induction on <m>m</m>.  Use the notation <m><hash />_T(\lambda)</m> to count the number of times <m>\lambda</m> occurs on the diagonal of a matrix representation of <m>T</m>.  We want to show that
<me><md>
<mrow>
<![CDATA[\#_T(\lambda)&\geq\dimension{\geneigenspace{T}{\lambda}}\\]]>
</mrow>
<mrow>&amp;=\dimension{\krn{\left(T-\lambda\right)^m}}&amp;&amp;<acroref type="theorem" acro="GEK" />
</mrow>
<mrow>&amp;=\nullity{\left(T-\lambda\right)^m}&amp;&amp;<acroref type="definition" acro="NOLT" />
</mrow>
</md></me>
For the base case, <m>\dim{V}=1</m>.  Every matrix representation of <m>T</m> is an upper triangular matrix with the lone eigenvalue of <m>T</m>, <m>\lambda</m>, as the single diagonal entry.  So <m><hash />_T(\lambda)=1</m>.  The generalized eigenspace of <m>\lambda</m> is not trivial (since by <acroref type="theorem" acro="GEK" /> it equals the regular eigenspace), so it cannot be a subspace of dimension zero, and thus <m>\dimension{\geneigenspace{T}{\lambda}}=1</m>.<p><p>
Now for the induction step, assume the claim is true for any linear transformation defined on a vector space with dimension <m>m-1</m> or less.  Suppose that <m>B=\set{\vectorlist{v}{m}}</m> is a basis for <m>V</m> that yields an upper triangular matrix representation for <m>T</m> with diagonal entries <m>\scalarlist{\lambda}{m}</m>.   Then <m>U=\spn{\set{\vectorlist{v}{m-1}}}</m> is a subspace of <m>V</m> that is invariant relative to <m>T</m>.  The restriction <m>\ltdefn{\restrict{T}{U}}{U}{U}</m> is then a linear transformation defined on <m>U</m>, a vector space of dimension <m>m-1</m>.  A matrix representation of <m>\restrict{T}{U}</m> relative to the basis <m>C=\set{\vectorlist{v}{m-1}}</m> will be an upper triangular matrix with diagonal entries <m>\scalarlist{\lambda}{m-1}</m>.  We can therefore apply the induction hypothesis to <m>\restrict{T}{U}</m> and its representation relative to <m>C</m>.<p><p>
Suppose that <m>\lambda</m> is any eigenvalue of <m>T</m>.  Then suppose that <m>\vect{v}\in\krn{\left(T-\lambda I_V\right)^m}</m>.  As an element of <m>V</m>, we can write <m>\vect{v}</m> as a linear combination of the basis elements of <m>B</m>, or more compactly, there is a vector <m>\vect{u}\in U</m> and a scalar <m>\alpha</m> such that <m>\vect{v}=\vect{u}+\alpha\vect{v}_m</m>.  Then,
<me><md>
<mrow>
</mrow>
<mrow>&amp;\alpha\left(\lambda_m-\lambda\right)^m\vect{v}_m\\]]>
</mrow>
<mrow>&amp;\quad\quad=]]>
<![CDATA[\alpha\lt{\left(T-\lambda I_V\right)^m}{\vect{v}_m}&amp;&amp;<acroref type="theorem" acro="EOMP" />
</mrow>
<mrow>&amp;\quad\quad=]]>
\zerovector+
<![CDATA[\alpha\lt{\left(T-\lambda I_V\right)^m}{\vect{v}_m}&amp;&amp;<acroref type="property" acro="Z" />
</mrow>
<mrow>&amp;\quad\quad=]]>
-\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+
<![CDATA[\alpha\lt{\left(T-\lambda I_V\right)^m}{\vect{v}_m}&amp;&amp;<acroref type="property" acro="AI" />
</mrow>
<mrow>&amp;\quad\quad=]]>
-\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+
<![CDATA[\lt{\left(T-\lambda I_V\right)^m}{\vect{u}+\alpha\vect{v}_m}&amp;&amp;<acroref type="theorem" acro="LTLC" />
</mrow>
<mrow>&amp;\quad\quad=]]>
-\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+
<![CDATA[\lt{\left(T-\lambda I_V\right)^m}{\vect{v}}&amp;&amp;<acroref type="theorem" acro="LTLC" />
</mrow>
<mrow>&amp;\quad\quad=]]>
-\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+\zerovector
</mrow>
<mrow>&amp;&]]><acroref type="definition" acro="KLT" />
</mrow>
<mrow>&amp;\quad\quad=]]>
-\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}
</mrow>
<mrow>&amp;&]]><acroref type="property" acro="Z" />
</mrow>
</md></me>
The final expression in this string of equalities is an element of <m>U</m> since <m>U</m> is invariant relative to both <m>T</m> and <m>I_V</m>.  The expression at the beginning is a scalar multiple of <m>\vect{v}_m</m>, and as such cannot be a nonzero element of <m>U</m> without violating the linear independence of <m>B</m>.  So
<me><md>
<mrow>
<![CDATA[\alpha\left(\lambda_m-\lambda\right)^m\vect{v}_m&=\zerovector]]>
</mrow>
</md></me>
The vector <m>\vect{v}_m</m> is nonzero since <m>B</m> is linearly independent, so <acroref type="theorem" acro="SMEZV" /> tells us that <m>\alpha\left(\lambda_m-\lambda\right)^m=0</m>.  From the properties of scalar multiplication, we are confronted with two possibilities.<p><p>
Our first case is that <m>\lambda\neq\lambda_m</m>.  Notice then that <m>\lambda</m> occurs the same number of times along the diagonal in the representations of <m>\restrict{T}{U}</m> and <m>T</m>.  Now <m>\alpha=0</m> and <m>\vect{v}=\vect{u}+0\vect{v}_m=\vect{u}</m>.   Since <m>\vect{v}</m> was chosen as an arbitrary element of <m>\krn{\left(T-\lambda I_V\right)^m}</m>, <acroref type="definition" acro="SSET" /> says that <m>\krn{\left(T-\lambda I_V\right)^m}\subseteq U</m>.  It is always the case that <m>\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}\subseteq\krn{\left(T-\lambda I_V\right)^m}</m>.  However, we can also see that in this case, the opposite set inclusion is true as well.  By <acroref type="definition" acro="SE" /> we have <m>\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}=\krn{\left(T-\lambda I_V\right)^m}</m>.  Then
<me><md>
<mrow>
<hash />_{T}(\lambda)
</mrow>
<mrow>&amp;=\#_{\restrict{T}{U}}(\lambda)\\]]>
</mrow>
<mrow>&amp;\geq\dimension{\geneigenspace{\restrict{T}{U}}{\lambda}}]]>
</mrow>
<mrow>&amp;&\text{Induction Hypothesis}\\]]>
</mrow>
<mrow>&amp;=\dimension{\krn{\left(\restrict{T}{U}-\lambda I_U\right)^{m-1}}}]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="GEK" />
</mrow>
<mrow>&amp;=\dimension{\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}}]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="KPLT" />
</mrow>
<mrow>&amp;=\dimension{\krn{\left(T-\lambda I_V\right)^m}}\\]]>
</mrow>
<mrow>&amp;=\dimension{\geneigenspace{T}{\lambda}}]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="GEK" />
</mrow>
</md></me>
The second case is that <m>\lambda=\lambda_m</m>.  Notice then that <m>\lambda</m> occurs one more time along the diagonal in the representation of <m>T</m> compared to the representation of <m>\restrict{T}{U}</m>.
Then
<me><md>
<mrow>
\lt{\left(\restrict{T}{U}-\lambda I_U\right)^m}{\vect{u}}
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}\\
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+\zerovector
</mrow>
<mrow>&amp;&]]><acroref type="property" acro="Z" />
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+\alpha(\lambda_m-\lambda)^m\vect{v}_m
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="ZSSM" />
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}}+\alpha\lt{\left(T-\lambda I_V\right)^m}{\vect{v}_m}
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="EOMP" />
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{u}+\alpha\vect{v}_m}
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="LTLC" />
</mrow>
<mrow>&amp;=]]>
\lt{\left(T-\lambda I_V\right)^m}{\vect{v}}\\
</mrow>
<mrow>&amp;=\zerovector]]>
</mrow>
<mrow>&amp;&]]><acroref type="definition" acro="KLT" />
</mrow>
</md></me>
So <m>\vect{u}\in\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}</m>.  The vector <m>\vect{v}</m> was chosen as an arbitrary member of
<m>\krn{\left(T-\lambda I_V\right)^m}</m>.  From the expression <m>\vect{v}=\vect{u}+\alpha\vect{v}_m</m> we can now see <m>\vect{v}</m> also as an element of <m>\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}</m> plus a scalar multiple of  <m>\vect{v}_m</m>.  This observation yields
<me><md>
<mrow>
<![CDATA[\dimension{\krn{\left(T-\lambda I_V\right)^m}}&\leq\dimension{\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}}+1]]>
</mrow>
</md></me>
Now count eigenvalues on the diagonal,
<me><md>
<mrow>
<hash />_{T}(\lambda)
</mrow>
<mrow>&amp;=\#_{\restrict{T}{U}}(\lambda)+1\\]]>
</mrow>
<mrow>&amp;\geq\dimension{\geneigenspace{\restrict{T}{U}}{\lambda}}+1]]>
</mrow>
<mrow>&amp;&\text{Induction Hypothesis}\\]]>
</mrow>
<mrow>&amp;=\dimension{\krn{\left(\restrict{T}{U}-\lambda I_U\right)^{m-1}}}+1]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="GEK" />
</mrow>
<mrow>&amp;=\dimension{\krn{\left(\restrict{T}{U}-\lambda I_U\right)^m}}+1]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="KPLT" />
</mrow>
<mrow>&amp;\geq\dimension{\krn{\left(T-\lambda I_V\right)^m}}\\]]>
</mrow>
<mrow>&amp;=\dimension{\geneigenspace{T}{\lambda}}]]>
</mrow>
<mrow>&amp;&]]><acroref type="theorem" acro="GEK" />
</mrow>
</md></me>
In <acroref type="theorem" acro="UTMR" /> we constructed an upper triangular matrix representation of <m>T</m> where each eigenvalue occurred <m>\algmult{T}{\lambda}</m> times on the diagonal.  So
<me><md>
<mrow>
\algmult{T}{\lambda_i}
</mrow>
<mrow>&amp;=\#_T(\lambda_i)&amp;&amp;<acroref type="theorem" acro="UTMR" />
</mrow>
<mrow>&amp;\geq\dimension{\geneigenspace{T}{\lambda_i}}\\]]>
</mrow>
<mrow>&amp;\geq\dimension{U_i}&amp;&amp;<acroref type="theorem" acro="PSSD" />
</mrow>
<mrow>&amp;=\algmult{T}{\lambda_i}&amp;&amp;<acroref type="theorem" acro="PSSD" />
</mrow>
</md></me>
Thus, <m>\dimension{\geneigenspace{T}{\lambda_i}}=\algmult{T}{\lambda_i}</m> and by
<acroref type="theorem" acro="EDYES" />, <m>U_i=\geneigenspace{T}{\lambda_i}</m> and we can write
<me><md>
<mrow>
<![CDATA[V&=U_1\ds U_2\ds U_3\ds\cdots\ds U_m\\]]>
</mrow>
<mrow>&amp;=]]>
\geneigenspace{T}{\lambda_1}\ds
\geneigenspace{T}{\lambda_2}\ds
\geneigenspace{T}{\lambda_3}\ds
\cdots\ds
\geneigenspace{T}{\lambda_m}
</mrow>
</md></me>
</proof>
</theorem>

Besides a nice decomposition into invariant subspaces, this proof has a bonus for us.
<theorem acro="DGES" index="generalized eigenspace!dimension">
<title>Dimension of Generalized Eigenspaces</title>

<todo>Cutover proof</todo>

<proof>
At the very end of the proof of <acroref type="theorem" acro="GESD" /> we obtain the inequalities
<me><md>
<mrow>
\algmult{T}{\lambda_i}
</mrow>
<mrow>&amp;\leq\dimension{\geneigenspace{T}{\lambda_i}}]]>
\leq\algmult{T}{\lambda_i}
</mrow>
</md></me>
which establishes the desired equality.
</proof>
</theorem>
















\subsect{JCF}{Jordan Canonical Form}
Now we are in a position to define what we (and others) regard as an especially nice matrix representation.  The word <q>canonical</q> has at its root, the word <q>canon,</q> which has various meanings.  One is the set of laws established by a church council.  Another is a set of writings that are authentic, important or representative.  Here we take it to mean the accepted, or best, representative among a variety of choices.  Every linear transformation admits a variety of representations, and we will declare one as the best.  Hopefully you will agree.
<definition acro="JCF" index="Jordan canonical form">
<title>Jordan Canonical Form</title><p>
A square matrix is in <term>Jordan canonical form</term> if it meets the following requirements:
<ol><li>
</li><li> The matrix is block diagonal.
</li><li> Each block is a Jordan block.
<![CDATA[</li><li> If <m>\rho<\lambda</m> then the block <m>\jordan{k}{\rho}</m> occupies rows with indices greater than the indices of the rows occupied by <m>\jordan{\ell}{\lambda}</m>.]]>
<![CDATA[</li><li> If <m>\rho=\lambda</m> and <m>\ell<k</m>, then the block <m>\jordan{\ell}{\lambda}</m> occupies rows with indices greater than the indices of the rows occupied by <m>\jordan{k}{\lambda}</m>.]]>
</li></ol>
</p></definition>

<theorem acro="JCFLT" index="linear transformation!Jordan canonical form">
<title>Jordan Canonical Form for a Linear Transformation</title>
<statement>
Suppose <m>\ltdefn{T}{V}{V}</m> is a linear transformation.  Then there is a basis <m>B</m> for <m>V</m> such that the matrix representation of <m>T</m> with the following properties:
<ol><li>
</li><li> The matrix representation is in Jordan canonical form.
</li><li> If <m>\jordan{k}{\lambda}</m> is one of the Jordan blocks, then <m>\lambda</m> is an eigenvalue of <m>T</m>.
</li><li> For a fixed value of <m>\lambda</m>, the largest block of the form <m>\jordan{k}{\lambda}</m> has size equal to the index of <m>\lambda</m>, <m>\indx{T}{\lambda}</m>.
</li><li> For a fixed value of <m>\lambda</m>, the number of blocks of the form <m>\jordan{k}{\lambda}</m> is the geometric multiplicity of <m>\lambda</m>, <m>\geomult{T}{\lambda}</m>.
</li><li> For a fixed value of <m>\lambda</m>, the number of rows occupied by blocks of the form <m>\jordan{k}{\lambda}</m> is the algebraic multiplicity of <m>\lambda</m>, <m>\algmult{T}{\lambda}</m>.
</li></ol>
</statement>

<proof>
This theorem is really just the consequence of applying to <m>T</m>, consecutively <acroref type="theorem" acro="GESD" />, <acroref type="theorem" acro="MRRGE" /> and <acroref type="theorem" acro="CFNLT" />.<p><p>
<acroref type="theorem" acro="GESD" /> gives us a decomposition of <m>V</m> into generalized eigenspaces, one for each distinct eigenvalue.  Since these generalized eigenspaces ar invariant relative to <m>T</m>, this provides a block diagonal matrix representation where each block is the matrix representation of the restriction of <m>T</m> to the generalized eigenspace.<p><p>
Restricting <m>T</m> to a generalized eigenspace results in a <q>nearly nilpotent</q> linear transformation, as stated more precisely in <acroref type="theorem" acro="RGEN" />.  We unravel <acroref type="theorem" acro="RGEN" /> in the proof of <acroref type="theorem" acro="MRRGE" /> so that we can apply <acroref type="theorem" acro="CFNLT" /> about representations of nilpotent linear transformations.<p><p>
We know the dimension of a generalized eigenspace is the algebraic multiplicity of the eigenvalue (<acroref type="theorem" acro="DGES" />), so the blocks associated with the generalized eigenspaces are square with a size equal to the algebraic multiplicity.  In refining the basis for this block, and producing Jordan blocks the results of <acroref type="theorem" acro="CFNLT" /> apply.  The total number of blocks will be the nullity of <m>\restrict{T}{\geneigenspace{T}{\lambda}}-\lambda I_{\geneigenspace{T}{\lambda}}</m>, which is the geometric multiplicity of <m>\lambda</m> as an eigenvalue of <m>T</m> (<acroref type="definition" acro="GME" />).  The largest of the Jordan blocks will have size equal to the index of the nilpotent linear transformation <m>\restrict{T}{\geneigenspace{T}{\lambda}}-\lambda I_{\geneigenspace{T}{\lambda}}</m>, which is exactly the definition of the index of the eigenvalue <m>\lambda</m> (<acroref type="definition" acro="IE" />).
</proof>
</theorem>

Before we do some examples of this result, notice how close Jordan canonical form is to a diagonal matrix.  Or, equivalently, notice how close we have come to diagonalizing a matrix (<acroref type="definition" acro="DZM" />).  We have a matrix representation which has diagonal entries that are the eigenvalues of a matrix.  Each occurs on the diagonal as many times as the algebraic multiplicity.  However, when the geometric multiplicity is strictly less than the algebraic multiplicity, we have some entries in the representation just above the diagonal (the <q>superdiagonal</q>).  Furthermore, we have some idea how often this happens if we know the geometric multiplicity and the index of the eigenvalue.<p><p>
We now recognize just how simple a diagonalizable linear transformation really is.  For each eigenvalue, the generalized eigenspace is just the regular eigenspace, and it decomposes into a direct sum of one-dimensional subspaces, each spanned by a different eigenvector chosen from a basis of eigenvectors for the eigenspace.<p><p>
Some authors create matrix representations of nilpotent linear transformations where the Jordan block has the ones just below the diagonal (the <q>subdiagonal</q>).  No matter, it is really the same, just different.  We have also defined Jordan canonical form to place blocks for the larger eigenvalues earlier, and for blocks with the same eigenvalue, we place the bigger ones earlier.  This is fairly standard, but there is no reason we couldn't order the blocks differently.  It'd be the same, just different.  The reason for choosing <em>some</em> ordering is to be assured that there is just <em>one</em> canonical matrix representation for each linear transformation.
<example acro="JCF10" index="Jordan canonical form!size 10">
<title>Jordan canonical form, size 10</title>

Suppose that <m>\ltdefn{T}{\complex{10}}{\complex{10}}</m> is the linear transformation defined by <m>\lt{T}{\vect{x}}=A\vect{x}</m> where
<me><md>
<mrow>
<![CDATA[A&=]]>
\begin{bmatrix}
<![CDATA[ -6 & 9 & -7 & -5 & 5 & 12 & -22 & 14 & 8 & 21 \\]]>
<![CDATA[ -3 & 5 & -3 & -1 & 2 & 7 & -12 & 9 & 1 & 12 \\]]>
<![CDATA[ 8 & -9 & 8 & 6 & 0 & -14 & 25 & -13 & -4 & -26 \\]]>
<![CDATA[ -7 & 9 & -7 & -5 & 0 & 13 & -23 & 13 & 2 & 24 \\]]>
<![CDATA[ 0 & -1 & 0 & -1 & -3 & -2 & 3 & -4 & -2 & -3 \\]]>
<![CDATA[ 3 & 2 & 1 & 2 & 9 & -1 & 1 & 5 & 5 & -5 \\]]>
<![CDATA[ -1 & 3 & -3 & -2 & 4 & 3 & -6 & 4 & 4 & 3 \\]]>
<![CDATA[ 3 & -4 & 3 & 2 & 1 & -5 & 9 & -5 & 1 & -9 \\]]>
<![CDATA[ 0 & 2 & 0 & 0 & 2 & 2 & -4 & 4 & 2 & 4 \\]]>
<![CDATA[ -4 & 4 & -5 & -4 & -1 & 6 & -11 & 4 & 1 & 10]]>
\end{bmatrix}
</mrow>
</md></me>
We'll find a basis for <m>\complex{10}</m> that will yield a matrix representation of <m>T</m> in  Jordan canonical form.  First we find the eigenvalues, and their multiplicities, with the techniques of <acroref type="chapter" acro="E" />.
<me><md>
<mrow>
<![CDATA[\lambda&=2  & \algmult{T}{2}&=2  & \geomult{T}{2}&=2\\]]>
<![CDATA[\lambda&=0  & \algmult{T}{0}&=3  & \geomult{T}{-1}&=2\\]]>
<![CDATA[\lambda&=-1 & \algmult{T}{-1}&=5 & \geomult{T}{-1}&=2]]>
</mrow>
</md></me>
For each eigenvalue, we can compute a generalized eigenspace.  By <acroref type="theorem" acro="GESD" /> we know that <m>\complex{10}</m> will decompose into a direct sum of these eigenspaces, and we can restrict <m>T</m> to each part of this decomposition.  At this stage we know that the Jordan canonical form will be block diagonal with blocks of size <m>2</m>, <m>3</m> and <m>5</m>, since the dimensions of the generalized eigenspaces are equal to the algebraic multiplicities of the eigenvalues (<acroref type="theorem" acro="DGES" />).  The geometric multiplicities tell us how many Jordan blocks occupy each of the three larger blocks, but we will discuss this as we analyze each eigenvalue.  We do not yet know the index of each eigenvalue (though we can easily infer it for <m>\lambda=2</m>) and even if we did have this information, it only determines the size of the largest Jordan block (per eigenvalue).  We will press ahead, considering each eigenvalue one at a time.<p><p>
The eigenvalue <m>\lambda=2</m> has <q>full</q> geometric multiplicity, and is not an impediment to diagonalizing <m>T</m>.  We will treat it in full generality anyway.  First we compute the generalized eigenspace.  Since <acroref type="theorem" acro="GEK" /> says that <m>\geneigenspace{T}{2}=\krn{\left(T-2I_{\complex{10}}\right)^{10}}</m> we can compute this generalized eigenspace as a null space derived from the matrix <m>A</m>,
<me><md>
<mrow>
\left(A-2I_{10}\right)^{10}
</mrow>
<mrow>&amp;\rref]]>
\begin{bmatrix}
<![CDATA[ \leading{1} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -2 & -1 \\]]>
<![CDATA[ 0 & \leading{1} & 0 & 0 & 0 & 0 & 0 & 0 & -1 & -1 \\]]>
<![CDATA[ 0 & 0 & \leading{1} & 0 & 0 & 0 & 0 & 0 & 1 & 2 \\]]>
<![CDATA[ 0 & 0 & 0 & \leading{1} & 0 & 0 & 0 & 0 & -1 & -2 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & \leading{1} & 0 & 0 & 0 & 1 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & \leading{1} & 0 & 0 & -2 & 1 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & \leading{1} & 0 & -1 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & \leading{1} & 0 & 1 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0]]>
\end{bmatrix}\\
<![CDATA[\geneigenspace{T}{2}&=\krn{\left(A-2I_{10}\right)^{10}}=]]>
\spn{\set{
\colvector{2 \\ 1 \\ -1 \\ 1 \\ -1 \\ 2 \\ 1 \\ 0 \\ 1 \\ 0},\,
\colvector{1 \\ 1 \\ -2 \\ 2 \\ 0 \\ -1 \\ 0 \\ -1 \\ 0 \\ 1}
}}
</mrow>
</md></me>
The restriction of <m>T</m> to <m>\geneigenspace{T}{2}</m> relative to the two basis vectors above has a matrix representation that is a <m>2\times 2</m> diagonal matrix with the eigenvalue <m>\lambda=2</m> as the diagonal entries.  So these two vectors will be the first two vectors in our basis for <m>\complex{10}</m>,
<me><md>
<mrow>
<![CDATA[\vect{v}_1&=\colvector{2 \\ 1 \\ -1 \\ 1 \\ -1 \\ 2 \\ 1 \\ 0 \\ 1 \\ 0}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_2&=\colvector{1 \\ 1 \\ -2 \\ 2 \\ 0 \\ -1 \\ 0 \\ -1 \\ 0 \\ 1}]]>
</mrow>
</md></me>
Notice that it was not strictly necessary to compute the 10-th power of <m>A-2I_{10}</m>.  With <m>\algmult{T}{2}=\geomult{T}{2}</m> the null space of the matrix <m>A-2I_{10}</m> contains <em>all</em> of the generalized eigenvectors of <m>T</m> for the eigenvalue <m>\lambda=2</m>.  But there was no harm in computing the 10-th power either.  This discussion is equivalent to the observation that the linear transformation <m>\ltdefn{\restrict{T}{\geneigenspace{T}{2}}}{\geneigenspace{T}{2}}{\geneigenspace{T}{2}}</m> is nilpotent of index <m>1</m>.  In other words, <m>\indx{T}{2}=1</m>.<p><p>
The eigenvalue <m>\lambda=0</m> will not be quite as simple, since the geometric multiplicity is strictly less than the geometric multiplicity.  As before, we first compute the generalized eigenspace.  Since <acroref type="theorem" acro="GEK" /> says that <m>\geneigenspace{T}{0}=\krn{\left(T-0I_{\complex{10}}\right)^{10}}</m> we can compute this generalized eigenspace as a null space derived from the matrix <m>A</m>,
<me><md>
<mrow>
\left(A-0I_{10}\right)^{10}
</mrow>
<mrow>&amp;\rref]]>
\begin{bmatrix}
<![CDATA[ \leading{1} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -1 & -1 \\]]>
<![CDATA[ 0 & \leading{1} & 0 & 0 & 0 & 0 & -1 & 0 & -1 & 0 \\]]>
<![CDATA[ 0 & 0 & \leading{1} & 0 & 0 & 0 & 0 & 0 & 1 & 2 \\]]>
<![CDATA[ 0 & 0 & 0 & \leading{1} & 0 & 0 & 0 & 0 & -2 & -1 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & \leading{1} & 0 & 0 & 0 & 1 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & \leading{1} & -1 & 0 & -1 & 2 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & \leading{1} & 1 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0]]>
\end{bmatrix}\\
<![CDATA[\geneigenspace{T}{0}&=\krn{\left(A-0I_{10}\right)^{10}}=]]>
\spn{\set{
\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0},\,
\colvector{1 \\ 1 \\ -1 \\ 2 \\ -1 \\ 1 \\ 0 \\ -1 \\ 1 \\ 0},\,
\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}}
=\spn{F}
</mrow>
</md></me>
So <m>\dimension{\geneigenspace{T}{0}}=3=\algmult{T}{0}</m>, as expected.  We will use these three basis vectors for the generalized eigenspace to construct a matrix representation of <m>\restrict{T}{\geneigenspace{T}{0}}</m>, where <m>F</m> is being defined implicitly as the basis of <m>\geneigenspace{T}{0}</m>.  We construct this representation as usual, applying <acroref type="definition" acro="MR" />,
<me><md>
<mrow>
\vectrep{F}{
\lt{\restrict{T}{\geneigenspace{T}{0}}}
{\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}}
}
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
\colvector{-1 \\ 0 \\ 2 \\ -1 \\ 0 \\ 2 \\ 0 \\ 0 \\ 0 \\ -1}
}
=
\vectrep{F}{
(-1)\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{0\\0\\-1}\\
\vectrep{F}{
\lt{\restrict{T}{\geneigenspace{T}{0}}}
{\colvector{1 \\ 1 \\ -1 \\ 2 \\ -1 \\ 1 \\ 0 \\ -1 \\ 1 \\ 0}}
}
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=
\vectrep{F}{
(1)\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{0\\0\\1}\\
\vectrep{F}{
\lt{\restrict{T}{\geneigenspace{T}{0}}}
{\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}}
}
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
\colvector{0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}
}
=\colvector{0\\0\\0}
</mrow>
</md></me>
So we have the matrix representation
<me><md>
<mrow>
<![CDATA[M&=\matrixrep{\restrict{T}{\geneigenspace{T}{0}}}{F}{F}]]>
=
\begin{bmatrix}
<![CDATA[0 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0 \\]]>
<![CDATA[-1 & 1 & 0]]>
\end{bmatrix}
</mrow>
</md></me>
By <acroref type="theorem" acro="RGEN" /> we can obtain a nilpotent matrix from this matrix representation by subtracting the eigenvalue from the diagonal elements, and then we can apply <acroref type="theorem" acro="CFNLT" /> to <m>M-(0)I_3</m>.  First check that <m>\left(M-(0)I_3\right)^2=\zeromatrix</m>, so we know that the index of <m>M-(0)I_3</m> as a nilpotent matrix, and that therefore <m>\lambda=0</m> is an eigenvalue of <m>T</m> with index <m>2</m>, <m>\indx{T}{0}=2</m>.  To determine a basis of <m>\complex{3}</m> that converts <m>M-(0)I_3</m> to canonical form, we need the null spaces of the powers of <m>M-(0)I_3</m>.  For convenience, set <m>N=M-(0)I_3</m>.
<me><md>
<mrow>
<![CDATA[\nsp{N^1}&=\spn{\set{]]>
\colvector{1\\1\\0},\,\colvector{0\\0\\1}
}}\\
<![CDATA[\nsp{N^2}&=\spn{\set{]]>
\colvector{1\\0\\0},\,\colvector{0\\1\\0},\,\colvector{0\\0\\1}
}}
=\complex{3}
</mrow>
</md></me>
Then we choose a vector from <m>\nsp{N^2}</m> that is not an element of <m>\nsp{N^1}</m>.  Any vector with unequal first two entries will fit the bill, say
<me><md>
<mrow>
<![CDATA[\vect{z}_{2,1}&=\colvector{1\\0\\0}]]>
</mrow>
</md></me>
where we are employing the notation in <acroref type="theorem" acro="CFNLT" />.  The next step is to multiply this vector by <m>N</m> to get part of the basis for <m>\nsp{N^1}</m>,
<me><md>
<mrow>
<![CDATA[\vect{z}_{1,1}&=]]>
N\vect{z}_{2,1}=
\begin{bmatrix}
<![CDATA[0 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0 \\]]>
<![CDATA[-1 & 1 & 0]]>
\end{bmatrix}
\colvector{1\\0\\0}
=
\colvector{0\\0\\-1}
</mrow>
</md></me>
We need a vector to pair with <m>\vect{z}_{1,1}</m> that will make a basis for the two-dimensional subspace <m>\nsp{N^1}</m>.  Examining the basis for <m>\nsp{N^1}</m> we see that a vector with its first two entries equal will do the job.
<me><md>
<mrow>
\vect{z}_{1,2}=\colvector{1\\1\\0}
</mrow>
</md></me>
Reordering, we find the basis,
<me><md>
<mrow>
C
</mrow>
<mrow>&amp;=\set{\vect{z}_{1,1},\,\vect{z}_{2,1},\,\vect{z}_{1,2}}]]>
=\set{\colvector{0\\0\\-1},\,\colvector{1\\0\\0},\,\colvector{1\\1\\0}}
</mrow>
</md></me>
From this basis, we can get a matrix representation of <m>N</m> (when viewed as a linear transformation) relative to the basis <m>C</m> for <m>\complex{3}</m>,
<me><md>
<mrow>
\begin{bmatrix}
<![CDATA[0 & 1 & 0 \\]]>
<![CDATA[0 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0]]>
\end{bmatrix}
</mrow>
<mrow>&amp;=]]>
\begin{bmatrix}
<![CDATA[\jordan{2}{0} & \zeromatrix \\]]>
<![CDATA[\zeromatrix & \jordan{1}{0} \\]]>
\end{bmatrix}
</mrow>
</md></me>
Now we add back the eigenvalue <m>\lambda=0</m> to the representation of <m>N</m> to obtain a representation for <m>M</m>.  Of course, with an eigenvalue of zero, the change is not apparent, so we won't display the same matrix again.  This is the second block of the Jordan canonical form for <m>T</m>.  However, the three vectors in <m>C</m> will not suffice as basis vectors for the domain of <m>T</m> <mdash /> they have the wrong size!  The vectors in <m>C</m> are vectors in the domain of a linear transformation defined by the matrix <m>M</m>.  But <m>M</m> was a matrix representation of <m>\restrict{T}{\geneigenspace{T}{0}}-0I_{\geneigenspace{T}{0}}</m> relative to the basis <m>F</m> for <m>\geneigenspace{T}{0}</m>.  We need to <q>uncoordinatize</q> each of the basis vectors in <m>C</m> to produce a linear combination of vectors in <m>F</m> that will be an element of the generalized eigenspace <m>\geneigenspace{T}{0}</m>.  These will be the next three vectors of our final answer, a basis for <m>\complex{10}</m> that has a pleasing matrix representation.
<me><md>
<mrow>
<![CDATA[\vect{v}_3&=\vectrepinv{F}{\colvector{0\\0\\-1}}=]]>
0\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}+
0\colvector{1 \\ 1 \\ -1 \\ 2 \\ -1 \\ 1 \\ 0 \\ -1 \\ 1 \\ 0}+
(-1)\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-1 \\ 0 \\ 2 \\ -1 \\ 0 \\ 2 \\ 0 \\ 0 \\ 0 \\ -1}\\
<![CDATA[\vect{v}_4&=\vectrepinv{F}{\colvector{1\\0\\0}}=]]>
1\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}+
0\colvector{1 \\ 1 \\ -1 \\ 2 \\ -1 \\ 1 \\ 0 \\ -1 \\ 1 \\ 0}+
0\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}\\
<![CDATA[\vect{v}_5&=\vectrepinv{F}{\colvector{1\\1\\0}}=]]>
1\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}+
1\colvector{1 \\ 1 \\ -1 \\ 2 \\ -1 \\ 1 \\ 0 \\ -1 \\ 1 \\ 0}+
0\colvector{1 \\ 0 \\ -2 \\ 1 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{1 \\ 2 \\ -1 \\ 2 \\ -1 \\ 2 \\ 1 \\ -1 \\ 1 \\ 0}
</mrow>
</md></me>
Five down, five to go.  Basis vectors, that is.  <m>\lambda=-1</m> is the smallest eigenvalue, but it will require the most computation.  First we compute the generalized eigenspace.  Since <acroref type="theorem" acro="GEK" /> says that <m>\geneigenspace{T}{-1}=\krn{\left(T-(-1)I_{\complex{10}}\right)^{10}}</m> we can compute this generalized eigenspace as a null space derived from the matrix <m>A</m>,
<me><md>
<mrow>
\left(A-(-1)I_{10}\right)^{10}
</mrow>
<mrow>&amp;\rref]]>
\begin{bmatrix}
<![CDATA[ \leading{1} & 0 & 1 & 0 & 1 & 0 & -1 & 1 & 0 & 1 \\]]>
<![CDATA[ 0 & \leading{1} & 0 & 0 & 1 & 0 & 0 & 1 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & \leading{1} & 1 & 0 & 1 & 0 & 0 & -2 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & \leading{1} & -2 & 1 & 0 & 2 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \leading{1} & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0]]>
\end{bmatrix}\\
<![CDATA[\geneigenspace{T}{-1}&=\krn{\left(A-(-1)I_{10}\right)^{10}}=]]>
\spn{\set{
\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0},\,
\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0},\,
\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0},\,
\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0},\,
\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}}
=\spn{F}
</mrow>
</md></me>
So <m>\dimension{\geneigenspace{T}{-1}}=5=\algmult{T}{-1}</m>, as expected.  We will use these five basis vectors for the generalized eigenspace to construct a matrix representation of <m>\restrict{T}{\geneigenspace{T}{-1}}</m>, where <m>F</m> is being recycled and defined now implicitly as the basis of <m>\geneigenspace{T}{-1}</m>.
We construct this representation as usual, applying <acroref type="definition" acro="MR" />,
<me><md>
<mrow>
</mrow>
<mrow>&amp;\vectrep{F}{]]>
\lt{\restrict{T}{\geneigenspace{T}{-1}}}
{\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}}
}
=\vectrep{F}{\colvector{-1 \\ 0 \\ 0 \\ 0 \\ 0 \\ -2 \\ -2 \\ 0 \\ 0 \\ -1}}\\
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
0\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
0\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-2)\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
0\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-1)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{0\\0\\-2\\0\\-1}\\
</mrow>
<mrow>&amp;\vectrep{F}{]]>
\lt{\restrict{T}{\geneigenspace{T}{-1}}}
{\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}}
}
=\vectrep{F}{\colvector{7 \\ 1 \\ -5 \\ 3 \\ -1 \\ 2 \\ 4 \\ 0 \\ 0 \\ 3}}\\
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
(-5)\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
4\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
0\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
3\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{-5\\-1\\4\\0\\3}\\
</mrow>
<mrow>&amp;\vectrep{F}{]]>
\lt{\restrict{T}{\geneigenspace{T}{-1}}}
{\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}}
}
=\vectrep{F}{\colvector{1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 1 \\ 0 \\ 0 \\ 1}}\\
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
(-1)\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
0\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
1\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
0\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
1\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{-1\\0\\1\\0\\1}\\
</mrow>
<mrow>&amp;\vectrep{F}{]]>
\lt{\restrict{T}{\geneigenspace{T}{-1}}}
{\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}}
}
=\vectrep{F}{\colvector{-1 \\ 0 \\ 2 \\ -2 \\ -1 \\ 1 \\ -1 \\ 1 \\ 0 \\ -2}}\\
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
2\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
1\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-2)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{2\\-1\\-1\\1\\-2}\\
</mrow>
<mrow>&amp;\vectrep{F}{]]>
\lt{\restrict{T}{\geneigenspace{T}{-1}}}
{\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}}
}
=\vectrep{F}{\colvector{-7 \\ -1 \\ 6 \\ -5 \\ -1 \\ -2 \\ -6 \\ 2 \\ 0 \\ -6}}\\
</mrow>
<mrow>&amp;=]]>
\vectrep{F}{
6\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-6)\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
2\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-6)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
}
=\colvector{6\\-1\\-6\\2\\-6}\\
</mrow>
</md></me>
So we have the matrix representation of the restriction of <m>T</m> (again recycling and redefining the matrix <m>M</m>)
<me><md>
<mrow>
<![CDATA[M&=\matrixrep{\restrict{T}{\geneigenspace{T}{-1}}}{F}{F}]]>
=
\begin{bmatrix}
<![CDATA[ 0 & -5 & -1 & 2 & 6 \\]]>
<![CDATA[ 0 & -1 & 0 & -1 & -1 \\]]>
<![CDATA[ -2 & 4 & 1 & -1 & -6 \\]]>
<![CDATA[ 0 & 0 & 0 & 1 & 2 \\]]>
<![CDATA[ -1 & 3 & 1 & -2 & -6]]>
\end{bmatrix}
</mrow>
</md></me>
By <acroref type="theorem" acro="RGEN" /> we can obtain a nilpotent matrix from this matrix representation by subtracting the eigenvalue from the diagonal elements, and then we can apply <acroref type="theorem" acro="CFNLT" /> to <m>M-(-1)I_5</m>.  First check that <m>\left(M-(-1)I_5\right)^3=\zeromatrix</m>, so we know that the index of <m>M-(-1)I_5</m> as a nilpotent matrix, and that therefore <m>\lambda=-1</m> is an eigenvalue of <m>T</m> with index <m>3</m>, <m>\indx{T}{-1}=3</m>.  To determine a basis of <m>\complex{5}</m> that converts <m>M-(-1)I_5</m> to canonical form, we need the null spaces of the powers of <m>M-(-1)I_5</m>.  Again, for convenience, set <m>N=M-(-1)I_5</m>.
<me><md>
<mrow>
<![CDATA[\nsp{N^1}&=\spn{\set{]]>
\colvector{1 \\ 0 \\ 1 \\ 0 \\ 0},\,
\colvector{-3 \\ 1 \\ 0 \\ -2 \\ 2}
}}\\
<![CDATA[\nsp{N^2}&=\spn{\set{]]>
\colvector{3 \\ 1 \\ 0 \\ 0 \\ 0},\,
\colvector{1 \\ 0 \\ 1 \\ 0 \\ 0},\,
\colvector{0 \\ 0 \\ 0 \\ 1 \\ 0},\,
\colvector{-3 \\ 0 \\ 0 \\ 0 \\ 1}
}}\\
<![CDATA[\nsp{N^3}&=\spn{\set{]]>
\colvector{1 \\ 0 \\ 0 \\ 0 \\ 0},\,
\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0},\,
\colvector{0 \\ 0 \\ 1 \\ 0 \\ 0},\,
\colvector{0 \\ 0 \\ 0 \\ 1 \\ 0},\,
\colvector{0 \\ 0 \\ 0 \\ 0 \\ 1}
}}
=\complex{5}
</mrow>
</md></me>
Then we choose a vector from <m>\nsp{N^3}</m> that is not an element of <m>\nsp{N^2}</m>.  The sum of the four basis vectors for <m>\nsp{N^2}</m> sum to a vector with all five entries equal to 1.  We will mess with the first entry to create a vector not in <m>\nsp{N^2}</m>,
<me><md>
<mrow>
<![CDATA[\vect{z}_{3,1}&=\colvector{0\\1\\1\\1\\1}]]>
</mrow>
</md></me>
where we are employing the notation in <acroref type="theorem" acro="CFNLT" />.  The next step is to multiply this vector by <m>N</m> to get a portion of the basis for <m>\nsp{N^2}</m>,
<me><md>
<mrow>
<![CDATA[\vect{z}_{2,1}&=]]>
N\vect{z}_{3,1}=
\begin{bmatrix}
<![CDATA[ 1 & -5 & -1 & 2 & 6 \\]]>
<![CDATA[ 0 & 0 & 0 & -1 & -1 \\]]>
<![CDATA[ -2 & 4 & 2 & -1 & -6 \\]]>
<![CDATA[ 0 & 0 & 0 & 2 & 2 \\]]>
<![CDATA[ -1 & 3 & 1 & -2 & -5]]>
\end{bmatrix}
\colvector{0\\1\\1\\1\\1}
=
\colvector{2 \\ -2 \\ -1 \\ 4 \\ -3}
</mrow>
</md></me>
We have a basis for the two-dimensional subspace <m>\nsp{N^1}</m> and we can add to that the vector <m>\vect{z}_{2,1}</m> and we have three of four basis vectors for <m>\nsp{N^2}</m>.  These three vectors span the subspace we call <m>Q_2</m>.  We need a fourth vector outside of <m>Q_2</m> to complete a basis of the four-dimensional subspace <m>\nsp{N^2}</m>.  Check that the vector
<me><md>
<mrow>
\vect{z}_{2,2}=\colvector{3\\1\\3\\1\\1}
</mrow>
</md></me>
is an element of <m>\nsp{N^2}</m> that lies outside of the subspace <m>Q_2</m>.  This vector was constructed by getting a nice basis for <m>Q_2</m> and forming a linear combination of this basis that specifies three of the five entries of the result.  Of the remaining two entries, one was changed to move the vector outside of <m>Q_2</m> and this was followed by a change to the remaining entry to place the vector into  <m>\nsp{N^2}</m>.  The vector <m>\vect{z}_{2,2}</m> is the lone basis vector for the subspace we call <m>R_2</m>.<p><p>
The remaining two basis vectors are easy to come by.  They are the result of applying <m>N</m> to each of the two most recently determined basis vectors,
<me><md>
<mrow>
<![CDATA[\vect{z}_{1,1}&=N\vect{z}_{2,1}=\colvector{3 \\ -1 \\ 0 \\ 2 \\ -2}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{z}_{1,2}&=N\vect{z}_{2,2}=\colvector{3 \\ -2 \\ -3 \\ 4 \\ -4}]]>
</mrow>
</md></me>
Now we reorder these basis vectors, to arrive at the basis
<me><md>
<mrow>
C
</mrow>
<mrow>&amp;=\set{\vect{z}_{1,1},\,\vect{z}_{2,1},\,\vect{z}_{3,1},\,\vect{z}_{1,2},\,\vect{z}_{2,2}}]]>
=\set{
\colvector{3 \\ -1 \\ 0 \\ 2 \\ -2},\,
\colvector{2 \\ -2 \\ -1 \\ 4 \\ -3},\,
\colvector{0 \\ 1 \\ 1 \\ 1 \\ 1},\,
\colvector{3 \\ -2 \\ -3 \\ 4 \\ -4},\,
\colvector{3 \\ 1 \\ 3 \\ 1 \\ 1}
}
</mrow>
</md></me>
A matrix representation of <m>N</m> relative to <m>C</m> is
<me><md>
<mrow>
\begin{bmatrix}
<![CDATA[0 & 1 & 0 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 1 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0 & 0 & 1 \\]]>
<![CDATA[0 & 0 & 0 & 0 & 0]]>
\end{bmatrix}
</mrow>
<mrow>&amp;=]]>
\begin{bmatrix}
<![CDATA[\jordan{3}{0} & \zeromatrix \\]]>
<![CDATA[\zeromatrix & \jordan{2}{0} \\]]>
\end{bmatrix}
</mrow>
</md></me>
To obtain a matrix representation of <m>M</m>, we add back in the matrix <m>(-1)I_5</m>, placing the eigenvalue back along the diagonal, and slightly modifying the Jordan blocks,
<me><md>
<mrow>
\begin{bmatrix}
<![CDATA[-1 & 1 & 0 & 0 & 0 \\]]>
<![CDATA[0 & -1 & 1 & 0 & 0 \\]]>
<![CDATA[0 & 0 & -1 & 0 & 0 \\]]>
<![CDATA[0 & 0 & 0 & -1 & 1 \\]]>
<![CDATA[0 & 0 & 0 & 0 & -1]]>
\end{bmatrix}
</mrow>
<mrow>&amp;=]]>
\begin{bmatrix}
<![CDATA[\jordan{3}{-1} & \zeromatrix \\]]>
<![CDATA[\zeromatrix & \jordan{2}{-1} \\]]>
\end{bmatrix}
</mrow>
</md></me>
The basis <m>C</m> yields a pleasant matrix representation for the <em>restriction</em> of the linear transformation <m>T-(-1)I</m> to the generalized eigenspace <m>\geneigenspace{T}{-1}</m>.  However, we must remember that these vectors in <m>\complex{5}</m> are representations of vectors in <m>\complex{10}</m> relative to the basis <m>F</m>.  Each needs to be <q>un-coordinatized</q> before joining our final basis.  Here we go,
<me><md>
<mrow>
<![CDATA[\vect{v}_6&=\vectrepinv{F}{\colvector{3 \\ -1 \\ 0 \\ 2 \\ -2}}=]]>
3\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
0\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
2\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-2)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-2 \\ -1 \\ 3 \\ -3 \\ -1 \\ 2 \\ 0 \\ 2 \\ 0 \\ -2}\\
<![CDATA[\vect{v}_7&=\vectrepinv{F}{\colvector{2 \\ -2 \\ -1 \\ 4 \\ -3}}=]]>
2\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-2)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-1)\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
4\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-3)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-2 \\ -2 \\ 2 \\ -3 \\ -2 \\ 0 \\ -1 \\ 4 \\ 0 \\ -3}\\
<![CDATA[\vect{v}_8&=\vectrepinv{F}{\colvector{0 \\ 1 \\ 1 \\ 1 \\ 1}}=]]>
0\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
1\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
1\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
1\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
1\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-2 \\ -2 \\ 0 \\ 0 \\ 1 \\ -1 \\ 1 \\ 1 \\ 0 \\ 1}\\
<![CDATA[\vect{v}_9&=\vectrepinv{F}{\colvector{3 \\ -2 \\ -3 \\ 4 \\ -4}}=]]>
3\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-2)\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
(-3)\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
4\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
(-4)\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-4 \\ -2 \\ 3 \\ -3 \\ -2 \\ -2 \\ -3 \\ 4 \\ 0 \\ -4}\\
<![CDATA[\vect{v}_{10}&=\vectrepinv{F}{\colvector{3 \\ 1 \\ 3 \\ 1 \\ 1}}=]]>
3\colvector{-1 \\ 0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
1\colvector{-1 \\ -1 \\ 0 \\ -1 \\ 1 \\ 0 \\ 0 \\ 0 \\ 0 \\ 0}+
3\colvector{1 \\ 0 \\ 0 \\ -1 \\ 0 \\ 2 \\ 1 \\ 0 \\ 0 \\ 0}+
1\colvector{-1 \\ -1 \\ 0 \\ 0 \\ 0 \\ -1 \\ 0 \\ 1 \\ 0 \\ 0}+
1\colvector{-1 \\ 0 \\ 0 \\ 2 \\ 0 \\ -2 \\ 0 \\ 0 \\ 0 \\ 1}
=
\colvector{-3 \\ -2 \\ 3 \\ -2 \\ 1 \\ 3 \\ 3 \\ 1 \\ 0 \\ 1}
</mrow>
</md></me>
To summarize, we list the entire basis <m>B=\set{\vectorlist{v}{10}}</m>,
<me><md>
<mrow>
<![CDATA[\vect{v}_1&=\colvector{2 \\ 1 \\ -1 \\ 1 \\ -1 \\ 2 \\ 1 \\ 0 \\ 1 \\ 0}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_2&=\colvector{1 \\ 1 \\ -2 \\ 2 \\ 0 \\ -1 \\ 0 \\ -1 \\ 0 \\ 1}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_3&=\colvector{-1 \\ 0 \\ 2 \\ -1 \\ 0 \\ 2 \\ 0 \\ 0 \\ 0 \\ -1}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_4&=\colvector{0 \\ 1 \\ 0 \\ 0 \\ 0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 0}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_5&=\colvector{1 \\ 2 \\ -1 \\ 2 \\ -1 \\ 2 \\ 1 \\ -1 \\ 1 \\ 0}\\]]>
<!-- % -->
<!-- % -->
<![CDATA[\vect{v}_6&=\colvector{-2 \\ -1 \\ 3 \\ -3 \\ -1 \\ 2 \\ 0 \\ 2 \\ 0 \\ -2}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_7&=\colvector{-2 \\ -2 \\ 2 \\ -3 \\ -2 \\ 0 \\ -1 \\ 4 \\ 0 \\ -3}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_8&=\colvector{-2 \\ -2 \\ 0 \\ 0 \\ 1 \\ -1 \\ 1 \\ 1 \\ 0 \\ 1}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_9&=\colvector{-4 \\ -2 \\ 3 \\ -3 \\ -2 \\ -2 \\ -3 \\ 4 \\ 0 \\ -4}]]>
</mrow>
<mrow>&amp;]]>
<![CDATA[\vect{v}_{10}&=\colvector{-3 \\ -2 \\ 3 \\ -2 \\ 1 \\ 3 \\ 3 \\ 1 \\ 0 \\ 1}]]>
</mrow>
</md></me>
The resulting matrix representation is
<me><md>
<mrow>
\matrixrep{T}{B}{B}
</mrow>
<mrow>&amp;=]]>
\begin{bmatrix}
<![CDATA[ 2 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 2 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & -1 & 1 & 0 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & -1 & 1 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & -1 & 0 & 0 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -1 & 1 \\]]>
<![CDATA[ 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -1]]>
\end{bmatrix}
</mrow>
</md></me>
If you are not inclined to check all of these computations, here are a few that should convince you of the amazing properties of the basis <m>B</m>.  Compute the matrix-vector products <m>A\vect{v}_i</m>, <m>1\leq i\leq 10</m>.  In each case the result will be a vector of the form <m>\lambda\vect{v}_i+\delta\vect{v}_{i-1}</m>, where <m>\lambda</m> is one of the eigenvalues (you should be able to predict ahead of time <em>which</em> one) and <m>\delta\in\set{0,1}</m>.<p><p>
Alternatively, if we can write inputs to the linear transformation <m>T</m> as linear combinations of the vectors in <m>B</m> (which we can do uniquely since <m>B</m> is a basis, <acroref type="theorem" acro="VRRB" />), then the <q>action</q> of <m>T</m> is reduced to a matrix-vector product  with the exceedingly simple matrix that is the Jordan canonical form.  Wow!
</example>

<!-- % TODO:  Needs another big example -->
\subsect{CHT}{Cayley-Hamilton Theorem}
Jordan was a French mathematician who was active in the late 1800's.  Cayley and Hamilton were 19th-century contemporaries of Jordan from Britain.  The theorem that bears their names is perhaps one of the most celebrated in basic linear algebra.  While our result applies only to vector spaces and linear transformations with scalars from the set of complex numbers, <m>\complexes</m>, the result is equally true if we restrict our scalars to the real numbers, <m>\real{\null}</m>.  It says that every matrix satisfies its own characteristic polynomial.
<theorem acro="CHT" index="Cayley-Hamilton">
<title>Cayley-Hamilton Theorem</title>
<statement>
Suppose <m>A</m> is a square matrix with characteristic polynomial <m>\charpoly{A}{x}</m>.  Then <m>\charpoly{A}{A}=\zeromatrix</m>.
</statement>

<proof>
Suppose <m>B</m> and <m>C</m> are similar matrices via the matrix <m>S</m>, <m>B=\similar{C}{S}</m>, and <m>q(x)</m> is any polynomial.  Then <m>q\left(B\right)</m> is similar to <m>q\left(C\right)</m> via <m>S</m>, <m>q\left(B\right)=\similar{q\left(C\right)}{S}</m>.  (See <acroref type="example" acro="HPDM" /> for hints on how to convince yourself of this.)<p><p>
By <acroref type="theorem" acro="JCFLT" /> and <acroref type="theorem" acro="SCB" /> we know <m>A</m> is similar to a matrix, <m>J</m>, in Jordan canonical form.  Suppose <m>\scalarlist{\lambda}{m}</m> are the distinct eigenvalues of <m>A</m> (and are therefore the eigenvalues and diagonal entries of <m>J</m>).  Then by <acroref type="theorem" acro="EMRCP" /> and <acroref type="definition" acro="AME" />, we can factor the characteristic polynomial as
<me><md>
<mrow>
<![CDATA[\charpoly{A}{x}&=]]>
\left(x-\lambda_1\right)^{\algmult{A}{\lambda_1}}
\left(x-\lambda_2\right)^{\algmult{A}{\lambda_2}}
\left(x-\lambda_3\right)^{\algmult{A}{\lambda_3}}
\cdots
\left(x-\lambda_m\right)^{\algmult{A}{\lambda_m}}
</mrow>
</md></me>
On substituting the matrix <m>J</m> we have
<me><md>
<mrow>
<![CDATA[\charpoly{A}{J}&=]]>
\left(J-\lambda_1 I\right)^{\algmult{A}{\lambda_1}}
\left(J-\lambda_2 I\right)^{\algmult{A}{\lambda_2}}
\left(J-\lambda_3 I\right)^{\algmult{A}{\lambda_3}}
\cdots
\left(J-\lambda_m I\right)^{\algmult{A}{\lambda_m}}
</mrow>
</md></me>
The matrix <m>J-\lambda_k I</m> will be block diagonal, and the block arising from the generalized eigenspace for <m>\lambda_k</m> will have zeros along the diagonal.  Suitably adjusted for matrices (rather than linear transformations), <acroref type="theorem" acro="RGEN" /> tells us this matrix is nilpotent.  Since the size of this nilpotent matrix is equal
to the algebraic multiplicity of <m>\lambda_k</m>, the power <m>\left(J-\lambda_k I\right)^{\algmult{A}{\lambda_k}}</m> will be a zero matrix (<acroref type="theorem" acro="KPNLT" />) in the location of this block.<p><p>
Repeating this argument for each of the <m>m</m> eigenvalues will place a zero block in some term of the product at every location on the diagonal.  The entire product will then be zero blocks on the diagonal, and zero off the diagonal.  In other words, it will be the zero matrix.  Since <m>A</m> and <m>J</m> are similar, <m>\charpoly{A}{A}=\charpoly{A}{J}=\zeromatrix</m>.
</proof>
</theorem>

<!--   End  JCF.tex -->
</subsection>
</section>
